"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from tofupilot.v2.errors import TofuPilotError
from tofupilot.v2.models import run_createop as models_run_createop
from tofupilot.v2.types import BaseModel
from typing import List, Optional


class RunCreateInternalServerErrorError500Data(BaseModel):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_run_createop.RunCreateInternalServerErrorIssue]] = None
    r"""An array of issues that were responsible for the error"""


class RunCreateInternalServerErrorError500(TofuPilotError):
    r"""The error information"""

    data: RunCreateInternalServerErrorError500Data

    def __init__(
        self,
        data: RunCreateInternalServerErrorError500Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class PartNumberExtractionFailedForSerialNumberSerialNumberProvideAPartNumberParameterExplicitlyOrFixTheRegexPatternInOrganizationSettingsError422Data(
    BaseModel
):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_run_createop.UnprocessableEntityIssue]] = None
    r"""An array of issues that were responsible for the error"""


class PartNumberExtractionFailedForSerialNumberSerialNumberProvideAPartNumberParameterExplicitlyOrFixTheRegexPatternInOrganizationSettingsError422(
    TofuPilotError
):
    r"""The error information"""

    data: PartNumberExtractionFailedForSerialNumberSerialNumberProvideAPartNumberParameterExplicitlyOrFixTheRegexPatternInOrganizationSettingsError422Data

    def __init__(
        self,
        data: PartNumberExtractionFailedForSerialNumberSerialNumberProvideAPartNumberParameterExplicitlyOrFixTheRegexPatternInOrganizationSettingsError422Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class OperatorWithEmailOperatedByDoesNotExistCreateTheUserFirstInTheAppProcedureWithIDIDDoesNotExistCreateTheProcedureFirstInTheAppError404Data(
    BaseModel
):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_run_createop.RunCreateNotFoundIssue]] = None
    r"""An array of issues that were responsible for the error"""


class OperatorWithEmailOperatedByDoesNotExistCreateTheUserFirstInTheAppProcedureWithIDIDDoesNotExistCreateTheProcedureFirstInTheAppError404(
    TofuPilotError
):
    r"""The error information"""

    data: OperatorWithEmailOperatedByDoesNotExistCreateTheUserFirstInTheAppProcedureWithIDIDDoesNotExistCreateTheProcedureFirstInTheAppError404Data

    def __init__(
        self,
        data: OperatorWithEmailOperatedByDoesNotExistCreateTheUserFirstInTheAppProcedureWithIDIDDoesNotExistCreateTheProcedureFirstInTheAppError404Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class PartCreationFailedRevisionCreationFailedBatchCreationFailedUnitCreationFailedVersionCreationFailedPlanUpgradeRequiredMonthlyLimitExceededError403Data(
    BaseModel
):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_run_createop.RunCreateForbiddenIssue]] = None
    r"""An array of issues that were responsible for the error"""


class PartCreationFailedRevisionCreationFailedBatchCreationFailedUnitCreationFailedVersionCreationFailedPlanUpgradeRequiredMonthlyLimitExceededError403(
    TofuPilotError
):
    r"""The error information"""

    data: PartCreationFailedRevisionCreationFailedBatchCreationFailedUnitCreationFailedVersionCreationFailedPlanUpgradeRequiredMonthlyLimitExceededError403Data

    def __init__(
        self,
        data: PartCreationFailedRevisionCreationFailedBatchCreationFailedUnitCreationFailedVersionCreationFailedPlanUpgradeRequiredMonthlyLimitExceededError403Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class PartNumberIsRequiredButNotProvidedAndNoAutomaticParsingIsConfiguredProvideAPartNumberParameterOrConfigureSerialNumberParsingInOrganizationSettingsError400Data(
    BaseModel
):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_run_createop.RunCreateBadRequestIssue]] = None
    r"""An array of issues that were responsible for the error"""


class PartNumberIsRequiredButNotProvidedAndNoAutomaticParsingIsConfiguredProvideAPartNumberParameterOrConfigureSerialNumberParsingInOrganizationSettingsError400(
    TofuPilotError
):
    r"""The error information"""

    data: PartNumberIsRequiredButNotProvidedAndNoAutomaticParsingIsConfiguredProvideAPartNumberParameterOrConfigureSerialNumberParsingInOrganizationSettingsError400Data

    def __init__(
        self,
        data: PartNumberIsRequiredButNotProvidedAndNoAutomaticParsingIsConfiguredProvideAPartNumberParameterOrConfigureSerialNumberParsingInOrganizationSettingsError400Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data
