"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import httpx
from tofupilot.v2.errors import TofuPilotError
from tofupilot.v2.models import unit_updateop as models_unit_updateop
from tofupilot.v2.types import BaseModel
from typing import List, Optional


class UnitUpdateInternalServerErrorError500Data(BaseModel):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_unit_updateop.UnitUpdateInternalServerErrorIssue]] = (
        None
    )
    r"""An array of issues that were responsible for the error"""


class UnitUpdateInternalServerErrorError500(TofuPilotError):
    r"""The error information"""

    data: UnitUpdateInternalServerErrorError500Data

    def __init__(
        self,
        data: UnitUpdateInternalServerErrorError500Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class SerialNumberSerialNumberIsAlreadyInUseError409Data(BaseModel):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_unit_updateop.UnitUpdateConflictIssue]] = None
    r"""An array of issues that were responsible for the error"""


class SerialNumberSerialNumberIsAlreadyInUseError409(TofuPilotError):
    r"""The error information"""

    data: SerialNumberSerialNumberIsAlreadyInUseError409Data

    def __init__(
        self,
        data: SerialNumberSerialNumberIsAlreadyInUseError409Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data


class UnitWithIDUnitIDNotFoundRevisionRevisionNumberNotFoundForPartPartNumberError404Data(
    BaseModel
):
    message: str
    r"""The error message"""

    code: str
    r"""The error code"""

    issues: Optional[List[models_unit_updateop.UnitUpdateNotFoundIssue]] = None
    r"""An array of issues that were responsible for the error"""


class UnitWithIDUnitIDNotFoundRevisionRevisionNumberNotFoundForPartPartNumberError404(
    TofuPilotError
):
    r"""The error information"""

    data: UnitWithIDUnitIDNotFoundRevisionRevisionNumberNotFoundForPartPartNumberError404Data

    def __init__(
        self,
        data: UnitWithIDUnitIDNotFoundRevisionRevisionNumberNotFoundForPartPartNumberError404Data,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data
