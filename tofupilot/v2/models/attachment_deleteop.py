"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from tofupilot.v2.types import BaseModel
from tofupilot.v2.utils import FieldMetadata, QueryParamMetadata
from typing import List
from typing_extensions import Annotated, TypedDict


class AttachmentDeleteRequestTypedDict(TypedDict):
    s3_keys: List[str]
    r"""Array of S3 keys of the attachments to delete"""


class AttachmentDeleteRequest(BaseModel):
    s3_keys: Annotated[
        List[str],
        pydantic.Field(alias="s3Keys"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]
    r"""Array of S3 keys of the attachments to delete"""


class AttachmentDeleteInternalServerErrorIssueTypedDict(TypedDict):
    message: str


class AttachmentDeleteInternalServerErrorIssue(BaseModel):
    message: str


class AttachmentDeleteNotFoundIssueTypedDict(TypedDict):
    message: str


class AttachmentDeleteNotFoundIssue(BaseModel):
    message: str


class AttachmentDeleteResponseTypedDict(TypedDict):
    r"""Response for successful attachment deletion"""

    ids: List[str]
    r"""Array of IDs of the attachments that were successfully deleted"""


class AttachmentDeleteResponse(BaseModel):
    r"""Response for successful attachment deletion"""

    ids: List[str]
    r"""Array of IDs of the attachments that were successfully deleted"""
