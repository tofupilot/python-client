"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from pydantic import model_serializer
from tofupilot.v2.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from tofupilot.v2.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UnitUpdateRequestBodyTypedDict(TypedDict):
    new_serial_number: NotRequired[str]
    r"""New serial number for the unit."""
    part_number: NotRequired[str]
    r"""New part number for the unit."""
    revision_number: NotRequired[str]
    r"""New revision number for the unit."""
    batch_number: NotRequired[Nullable[str]]
    r"""New batch number for the unit. Set to null to remove batch."""


class UnitUpdateRequestBody(BaseModel):
    new_serial_number: Optional[str] = None
    r"""New serial number for the unit."""

    part_number: Optional[str] = None
    r"""New part number for the unit."""

    revision_number: Optional[str] = None
    r"""New revision number for the unit."""

    batch_number: OptionalNullable[str] = UNSET
    r"""New batch number for the unit. Set to null to remove batch."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "new_serial_number",
            "part_number",
            "revision_number",
            "batch_number",
        ]
        nullable_fields = ["batch_number"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m


class UnitUpdateRequestTypedDict(TypedDict):
    serial_number: str
    r"""Serial number of the unit to update."""
    request_body: UnitUpdateRequestBodyTypedDict


class UnitUpdateRequest(BaseModel):
    serial_number: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""Serial number of the unit to update."""

    request_body: Annotated[
        UnitUpdateRequestBody,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class UnitUpdateResponseTypedDict(TypedDict):
    r"""Unit updated successfully"""

    id: str
    r"""Unique identifier of the updated unit."""


class UnitUpdateResponse(BaseModel):
    r"""Unit updated successfully"""

    id: str
    r"""Unique identifier of the updated unit."""
